# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Environment variables for this script
ENVIRONMENT_DIR="$HOME/environment"
SOURCE_SCRIPTS_DIR="$ENVIRONMENT_DIR/scripts/source"

# Environment
export EDITOR=vim
case $TERM in
    xterm*)
        PS1="\[\e]0;\w\a\\$\] "
        ;;
    *)
        PS1="\$ "
        ;;
esac

# bash
set -o vi
set -o history
export HISTCONTROL="ignorespace:erasedups"
export HISTIGNORE="&:exit:[bf]g:clear:kill:history"

# ctags
alias ctags='ctags --fields=+l'

# go
export GOROOT=/usr/lib/go-1.10
export GOPATH=$HOME/go
export PATH=$GOROOT/bin:$GOPATH/bin:$PATH

# grep
alias rgrep='grep -R'

# ls
alias ls='ls --color=auto'
alias la='ls -a'
alias ll='ls -l'

# man
alias man='man -P less'

# path
export PATH="$ENVIRONMENT_DIR/bin:$PATH"

# perlbrew
source $HOME/perl5/perlbrew/etc/bashrc

# xdg environment variables
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CONFIG_CACHE="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# source scripts
if [[ -d "$SOURCE_SCRIPTS_DIR" ]]; then
	for script in $SOURCE_SCRIPTS_DIR/*; do
		source $script
	done
fi

# source rust environment
if [[ -f "$HOME/.cargo/env" ]]; then
    source $HOME/.cargo/env
fi

# clear temp environment
unset ENVIRONMENT_DIR
unset SOURCE_SCRIPTS_DIR


# automatically attach to tmux session
#if [[ "$TMUX" == "" ]] && [[ "$SSH_CONNECTION" != "" ]]; then
    ## attempt to discover a detached session and attach it, else create a new session
    #me=$(whoami)
    #if tmux has-session t $me 2>/dev/null; then
        #tmux -2 attach-session -t $me
    #else
        #tmux -2 new-session -s $me
    #fi
#fi

