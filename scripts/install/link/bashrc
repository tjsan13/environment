# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Environment variables for this script
ENVIRONMENT_DIR="$HOME/.config/environment"
SOURCE_SCRIPTS_DIR="$ENVIRONMENT_DIR/scripts/source"

# Environment
export EDITOR=vim

# bash
set -o vi
set -o history

shopt -s histappend
export HISTCONTROL='ignoreboth'
export HISTIGNORE="&:exit:[bf]g:clear:kill:history"

shopt -s checkwinsize

# go
export GOPATH=$HOME/code/go
export GOBIN=$GOPATH/bin
export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$GOPATH/bin:$PATH

# kube
export KUBECONFIG="$HOME/.kube/config:$HOME/.kube/aws-dev"

# perlbrew
if [[ -f "$HOME/perl5/perlbrew/etc/bashrc" ]]; then
    source $HOME/perl5/perlbrew/etc/bashrc
fi

# xdg environment variables
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CONFIG_CACHE="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# source aliases
if [ -f ~/.bash_aliases ]; then
    source ~/.bash_aliases
fi

# source bash prompt
if [ -f ~/.bash_prompt ]; then
    source ~/.bash_prompt
fi

# source bash completion scripts
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    source /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
  fi
fi

# source scripts
if [[ -d "$SOURCE_SCRIPTS_DIR" ]]; then
	for script in $SOURCE_SCRIPTS_DIR/*; do
		source $script
	done
fi

# clear temp environment
unset ENVIRONMENT_DIR
unset SOURCE_SCRIPTS_DIR


# automatically attach to tmux session
#if [[ "$TMUX" == "" ]] && [[ "$SSH_CONNECTION" != "" ]]; then
    ## attempt to discover a detached session and attach it, else create a new session
    #me=$(whoami)
    #if tmux has-session t $me 2>/dev/null; then
        #tmux -2 attach-session -t $me
    #else
        #tmux -2 new-session -s $me
    #fi
#fi

